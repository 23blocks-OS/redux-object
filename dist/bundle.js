module.exports=function(e){function r(n){if(t[n])return t[n].exports;var i=t[n]={exports:{},id:n,loaded:!1};return e[n].call(i.exports,i,i.exports,r),i.loaded=!0,i.exports}var t={};return r.m=e,r.c=t,r.p="",r(0)}([function(e,r,t){e.exports=t(1)},function(e,r){"use strict";function t(e,r,t,i){var o=i.ignoreLinks,a=r.relationships[t];if("undefined"!=typeof a.data)return Array.isArray(a.data)?a.data.map(function(r){return n(e,r.type,r.id,i)}):null===a.data?null:n(e,a.data.type,a.data.id,i);if(!o&&a.links)throw new Error("\n      Remote lazy loading is not implemented for redux-object. \n      Please refer https://github.com/yury-dymov/json-api-normalizer/issues/2.\n      If you would like to disable this error, provide 'ingoreLinks: true' option to the build function like below:\n      build(reducer, type, id, { ignoreLinks: true })\n    ");return[]}function n(e,r){var o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},u={eager:!1,ignoreLinks:!1},l=i({},u,a),d=l.eager;if(!e[r])return null;if(null===o||Array.isArray(o)){var s=o||Object.keys(e[r]);return s.map(function(t){return n(e,r,t,l)})}var f=o.toString(),c={},p=e[r][f];return p?(p.id&&(c.id=p.id),Object.keys(p.attributes).forEach(function(e){c[e]=p.attributes[e]}),p.relationships&&Object.keys(p.relationships).forEach(function(r){d?c[r]=t(e,p,r,l):Object.defineProperty(c,r,{get:function(){var n="__"+r;return c[n]?c[n]:(c[n]=t(e,p,r,l),c[n])}})}),"undefined"==typeof c.id&&(c.id=f),c):null}Object.defineProperty(r,"__esModule",{value:!0});var i=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e};r.default=n}]);